package UI;


import Db.DbFunction;
import Db.Enum.ECategoryType;
import Db.Enum.EPaymentMethods;
import Db.Exception.DbConnectException;
import Db.Tables.Expenses;

import javax.swing.*;
import java.awt.*;
import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 * @author pc
 */
public class Statistic extends javax.swing.JFrame {
    private DbFunction dbFunction;

    /**
     * Creates new form Statistic
     */
    public Statistic() {
        dbFunction = new DbFunction();
        initComponents();
        txtf_statistic_date1.setText(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis())));
        txtf_statistic_date2.setText(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis())));
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        set_categories_combobox();
        cmbx_statistic_category.setSelectedItem(null);

    }

    private void set_categories_combobox() {
        cmbx_statistic_category.removeAllItems();
        try {
            dbFunction.getCategories().forEach(category -> {
                cmbx_statistic_category.addItem(category.getName());
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_statistic_date_between = new javax.swing.JLabel();
        txtf_statistic_date1 = new javax.swing.JTextField();
        txtf_statistic_date2 = new javax.swing.JTextField();
        lbl_statistic_max_expenses = new javax.swing.JLabel();
        lbl_statistic_min_expenses = new javax.swing.JLabel();
        lbl_statistic_avarage_expenses = new javax.swing.JLabel();
        lbl_statistic_total_expenses = new javax.swing.JLabel();
        rbtn_statistic_max_expenses = new javax.swing.JRadioButton();
        rbtn_statistic_min_expenses = new javax.swing.JRadioButton();
        rbtn_statistic_avarage_expenses = new javax.swing.JRadioButton();
        rbtn_statistic_total_expenses = new javax.swing.JRadioButton();
        btn_statistic_show = new javax.swing.JButton();
        lbl_statistic_category_cmbx = new javax.swing.JLabel();
        cmbx_statistic_category = new javax.swing.JComboBox<>();
        btn_statistic_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_statistic_date_between.setText("Date Between");

        lbl_statistic_max_expenses.setText("Max Expenses");

        lbl_statistic_min_expenses.setText("Min Expenses");

        lbl_statistic_avarage_expenses.setText("Avarage Expenses");

        lbl_statistic_total_expenses.setText("Total Expenses");

        rbtn_statistic_max_expenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_statistic_max_expensesActionPerformed(evt);
            }
        });

        rbtn_statistic_min_expenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_statistic_min_expensesActionPerformed(evt);
            }
        });

        rbtn_statistic_avarage_expenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_statistic_avarage_expensesActionPerformed(evt);
            }
        });

        rbtn_statistic_total_expenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_statistic_total_expensesActionPerformed(evt);
            }
        });

        btn_statistic_show.setText("Show");
        btn_statistic_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_statistic_showActionPerformed(evt);
            }
        });

        lbl_statistic_category_cmbx.setText("Category");

        cmbx_statistic_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        btn_statistic_clear.setText("Clear");
        btn_statistic_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_statistic_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(55, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lbl_statistic_date_between)
                                                .addGap(22, 22, 22)
                                                .addComponent(txtf_statistic_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(46, 46, 46)
                                                .addComponent(txtf_statistic_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lbl_statistic_max_expenses)
                                                        .addComponent(lbl_statistic_min_expenses)
                                                        .addComponent(lbl_statistic_avarage_expenses)
                                                        .addComponent(lbl_statistic_total_expenses)
                                                        .addComponent(lbl_statistic_category_cmbx))
                                                .addGap(22, 22, 22)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(rbtn_statistic_total_expenses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rbtn_statistic_avarage_expenses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rbtn_statistic_min_expenses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(rbtn_statistic_max_expenses, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(cmbx_statistic_category, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(37, 37, 37))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(btn_statistic_show, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_statistic_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_date_between)
                                        .addComponent(txtf_statistic_date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtf_statistic_date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_max_expenses)
                                        .addComponent(rbtn_statistic_max_expenses))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_min_expenses)
                                        .addComponent(rbtn_statistic_min_expenses))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_avarage_expenses)
                                        .addComponent(rbtn_statistic_avarage_expenses))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_total_expenses)
                                        .addComponent(rbtn_statistic_total_expenses))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbl_statistic_category_cmbx)
                                        .addComponent(cmbx_statistic_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btn_statistic_show)
                                        .addComponent(btn_statistic_clear))
                                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();

    }// </editor-fold>

    private void btn_statistic_showActionPerformed(java.awt.event.ActionEvent evt) {
        int personId = 1; // Gerçek kişi kimliğini burada belirleyin
        List<Expenses> expensesList = new ArrayList<>();
        DbFunction dbFunctions = new DbFunction();

        Date date1 = Date.valueOf(txtf_statistic_date1.getText());
        Date date2 = Date.valueOf(txtf_statistic_date2.getText());

        String category = cmbx_statistic_category.getSelectedItem() == null ? null : cmbx_statistic_category.getSelectedItem().toString();

        // Seçilen butonları tutmak için bir liste kullanıyoruz
        List<String> selectedButtons = new ArrayList<>();
        if (rbtn_statistic_total_expenses.isSelected()) {
            selectedButtons.add("total");
        }
        if (rbtn_statistic_avarage_expenses.isSelected()) {
            selectedButtons.add("average");
        }
        if (rbtn_statistic_max_expenses.isSelected()) {
            selectedButtons.add("max");
        }
        if (rbtn_statistic_min_expenses.isSelected()) {
            selectedButtons.add("min");
        }

        try {
            if (category != null) {
                ECategoryType categoryType = ECategoryType.valueOf(category);
                for (String selectedButton : selectedButtons) {
                    switch (selectedButton) {
                        case "total":
                            expensesList.addAll(dbFunctions.getStatisticsTotalExpensesBetweenDatesByCategory(personId, date1, date2, categoryType));
                            break;
                        case "average":
                            expensesList.addAll(dbFunctions.getStatisticsAvgExpensesBetweenDatesByCategory(personId, date1, date2, categoryType));
                            break;
                        case "max":
                            expensesList.addAll(dbFunctions.getStatisticsMaxExpensesBetweenDatesByCategory(personId, date1, date2, categoryType));
                            break;
                        case "min":
                            expensesList.addAll(dbFunctions.getStatisticsMinExpensesBetweenDatesByCategory(personId, date1, date2, categoryType));
                            break;
                    }
                }
            } else {
                for (String selectedButton : selectedButtons) {
                    switch (selectedButton) {
                        case "total":
                            expensesList.addAll(dbFunctions.getStatisticsTotalExpensesBetweenDates(personId, date1, date2));
                            break;
                        case "average":
                            expensesList.addAll(dbFunctions.getStatisticsAvgExpensesBetweenDates(personId, date1, date2));
                            break;
                        case "max":
                            expensesList.addAll(dbFunctions.getStatisticsMaxExpensesBetweenDates(personId, date1, date2));
                            break;
                        case "min":
                            expensesList.addAll(dbFunctions.getStatisticsMinExpensesBetweenDates(personId, date1, date2));
                            break;
                    }
                }
            }
        } catch (DbConnectException | SQLException e) {
            e.printStackTrace();
        }

        if (!expensesList.isEmpty()) {
            StringBuilder result = new StringBuilder();
            for (Expenses expense : expensesList) {
                result.append(expense.getDescription()).append(": ").append(expense.getCost()).append("\n");
            }
            JOptionPane.showMessageDialog(this, result.toString(), "Result", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No result found", "Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void btn_statistic_clearActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        rbtn_statistic_avarage_expenses.setSelected(false);
        rbtn_statistic_max_expenses.setSelected(false);
        rbtn_statistic_min_expenses.setSelected(false);
        rbtn_statistic_total_expenses.setSelected(false);
        txtf_statistic_date1.setText(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis())));
        txtf_statistic_date2.setText(new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis())));
        cmbx_statistic_category.setSelectedItem(null);

    }


    private void rbtn_statistic_total_expensesActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    private void rbtn_statistic_avarage_expensesActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void rbtn_statistic_min_expensesActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void rbtn_statistic_max_expensesActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Statistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Statistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Statistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Statistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Statistic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btn_statistic_clear;
    private javax.swing.JButton btn_statistic_show;
    private javax.swing.JComboBox<String> cmbx_statistic_category;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_statistic_avarage_expenses;
    private javax.swing.JLabel lbl_statistic_category_cmbx;
    private javax.swing.JLabel lbl_statistic_date_between;
    private javax.swing.JLabel lbl_statistic_max_expenses;
    private javax.swing.JLabel lbl_statistic_min_expenses;
    private javax.swing.JLabel lbl_statistic_total_expenses;
    private javax.swing.JRadioButton rbtn_statistic_avarage_expenses;
    private javax.swing.JRadioButton rbtn_statistic_max_expenses;
    private javax.swing.JRadioButton rbtn_statistic_min_expenses;
    private javax.swing.JRadioButton rbtn_statistic_total_expenses;
    private javax.swing.JTextField txtf_statistic_date1;
    private javax.swing.JTextField txtf_statistic_date2;
    // End of variables declaration
}
